{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","useUser.ts","components/TodoModal/TodoModal.tsx","useTodos.ts","App.tsx","index.tsx"],"names":["TodoList","dataTodos","setChosenTodo","chosenTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","searchInput","setSearchInput","setFilter","filter","value","defaultValue","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useUser","userId","useState","chosenUser","setChosenUser","isLoading","setIsLoading","useEffect","getUser","data","TodoModal","href","email","name","useTodos","todos","setTodos","filterTodos","toLocaleLowerCase","includes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50783723.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  dataTodos: Todo[];\n  setChosenTodo: (todo: Todo) => void;\n  chosenTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  dataTodos,\n  setChosenTodo,\n  chosenTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {dataTodos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => (setChosenTodo(todo))}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': todo.id !== chosenTodo?.id,\n                  'fa-eye-slash': todo.id === chosenTodo?.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype TodoFilterProps = {\n  searchInput: string;\n  setSearchInput: (input: string) => void ;\n  setFilter: (filter: Filter) => void,\n  filter: Filter;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  searchInput,\n  setSearchInput,\n  setFilter,\n  filter,\n\n}) => {\n  const handleSearchInput: React.ChangeEventHandler<HTMLInputElement> = (\n    event,\n  ) => {\n    setSearchInput(event.target.value);\n  };\n\n  const resetSearchInput = () => {\n    setSearchInput('');\n  };\n\n  const handleFilterChoise: React.ChangeEventHandler<HTMLSelectElement> = (\n    event,\n  ) => {\n    setFilter(event.target.value as Filter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            defaultValue=\"all\"\n            onChange={handleFilterChoise}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={handleSearchInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {(searchInput !== '') && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetSearchInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { getUser } from './api';\nimport { User } from './types/User';\n\nexport const useUser = (userId: number) => {\n  const [chosenUser, setChosenUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId)\n      .then((data) => {\n        setChosenUser(data);\n        setIsLoading(false);\n      });\n  }, [userId]);\n\n  return { chosenUser, isLoading };\n};\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { useUser } from '../../useUser';\n\ntype TodoModalProps = {\n  chosenTodo: Todo;\n  setChosenTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  chosenTodo,\n  setChosenTodo,\n}) => {\n  const { chosenUser, isLoading } = useUser(chosenTodo.userId);\n\n  const handleOnClick = () => {\n    setChosenTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleOnClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {chosenTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {chosenTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${chosenUser?.email}`}>\n                {chosenUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const useTodos = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return { todos, isLoading };\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { useTodos } from './useTodos';\nimport { Filter } from './types/Filter';\n\nconst filterTodos = (todos: Todo[], filter: Filter, searchInput: string) => {\n  return (todos.filter(todo => {\n    if (filter === 'active' && todo.completed) {\n      return false;\n    }\n\n    if (filter === 'completed' && !todo.completed) {\n      return false;\n    }\n\n    if (\n      !todo.title.toLocaleLowerCase().includes(\n        searchInput.toLocaleLowerCase(),\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  })\n  );\n};\n\nexport const App: React.FC = () => {\n  const { todos, isLoading } = useTodos();\n  const [chosenTodo, setChosenTodo] = useState<Todo | null>(null);\n  const [searchInput, setSearchInput] = useState<string>('');\n  const [filter, setFilter] = useState<Filter>('all');\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    dataTodos={filterTodos(todos, filter, searchInput)}\n                    setChosenTodo={setChosenTodo}\n                    chosenTodo={chosenTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {chosenTodo && (\n        <TodoModal\n          chosenTodo={chosenTodo}\n          setChosenTodo={setChosenTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}